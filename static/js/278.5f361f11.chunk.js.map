{"version":3,"file":"static/js/278.5f361f11.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.syled.js","components/MovieList/MovieList.jsx","components/Service/fetchData.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 10px;\n  padding: 20px;\n  width: 300px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 10px;\n  max-width: 100%;\n  padding: 5px;\n  border-radius: 5px;\n  :hover,\n  :focus {\n    background: rgb(27 180 139);\n    color: white;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MoviesList, Title, StyledLink } from './MovieList.syled';\n\nexport const MovieList = ({movies, link}) => {\n  const location = useLocation()\n\n    return (\n        <MoviesList>\n        <Title>Trending today</Title>\n        {movies.map(({ name, title, id }) => {\n          return (\n            <StyledLink key={id} to={`${link + id}`} state={{ from: location }}>\n              <h2>{name || title}</h2>\n            </StyledLink>\n          );\n        })}\n      </MoviesList>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '158499514fbb39b03ca6770e80a554af',\n};\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`)\n  return data;\n}\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`)\n  return data.cast;\n}\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`)\n  return data.results;\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getMovieByQuery } from 'components/Service/fetchData';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [inputValue, setInputValue] = useState(movieName)\n\n  const updateQueryString = name => {\n    setInputValue(name);\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n\n    const fetchData = async () => {\n      setLoader(true);\n      try {\n        const data = await getMovieByQuery(movieName);\n        setMovies([...data]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchData();\n  }, [movieName]);\n\n  const onHandleSubmit = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onHandleSubmit(e.target.elements.query.value);\n        }}\n      >\n        <input\n          onChange={e => updateQueryString(e.target.value)}\n          value={inputValue}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n        />\n        <button>Search</button>\n      </form>\n      {loader && <Loader />}\n      {movies.length > 0 && <MovieList movies={movies} link={``} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","styled","Title","StyledLink","Link","MovieList","movies","link","location","useLocation","map","name","title","id","to","state","from","axios","api_key","getTrendingMovie","params","page","data","getMovieByQuery","query","results","getMovieById","getMovieCast","cast","getMovieReview","useSearchParams","searchParams","setSearchParams","movieName","get","useState","setMovies","loader","setLoader","inputValue","setInputValue","useEffect","fetchData","console","log","onSubmit","e","preventDefault","target","elements","value","onChange","type","autoComplete","autoFocus","placeholder","length"],"sourceRoot":""}