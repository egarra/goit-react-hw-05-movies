{"version":3,"file":"static/js/229.a531882c.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAgB,mCAAG,sGACPF,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,OAAQ,CACNC,KAAM,KAHoB,uBACtBC,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNI,MAAAA,KAHyB,uBACrBF,EADqB,EACrBA,KADqB,kBAMtBA,EAAKG,SANiB,2CAAH,sDASfC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,IADjB,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADG,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,EAAKO,MAFc,2CAAH,sDAKZC,EAAc,mCAAG,WAAMH,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADK,uBACpBL,EADoB,EACpBA,KADoB,kBAErBA,EAAKG,SAFgB,2CAAH,qD,oKCjCdM,EAAOC,EAAAA,GAAAA,GAAH,6GAOJC,EAAQD,EAAAA,GAAAA,GAAH,kD,SCPLE,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE5B,OACE,SAACJ,EAAD,UACGI,EAAQC,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASX,EAAS,EAATA,GAC/B,OACE,2BACE,UAACM,EAAD,sBAAgBI,MAChB,uBAAIC,MAFGX,EAKZ,KAGN,ECeD,EAxBgB,WACZ,OAA8BY,EAAAA,EAAAA,UAAS,IAAvC,eAAOJ,EAAP,KAAgBK,EAAhB,KACQb,GAAOc,EAAAA,EAAAA,MAAPd,GAeR,OAbAe,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEMb,EAAAA,EAAAA,IAAeH,GAFrB,OAEPL,EAFO,OAGbkB,GAAW,OAAIlB,IAHF,gDAKbsB,QAAQC,IAAR,MALa,yDAAH,qDASlBF,GACH,GAAE,CAAChB,KAGA,8BACKQ,EAAQW,OAAS,GAAI,SAACZ,EAAD,CAAaC,QAASA,KAAa,mDAGpE,C","sources":["components/Service/fetchData.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '158499514fbb39b03ca6770e80a554af',\n};\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`)\n  return data;\n}\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`)\n  return data.cast;\n}\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`)\n  return data.results;\n}\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n`\n\nexport const Title = styled.h2`\n    margin-bottom: 10px;\n`","import { List, Title } from \"./ReviewsList.styled\";\n\nexport const ReviewsList = ({ reviews }) => {\n\n  return (\n    <List>\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <Title>Author: {author}</Title>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n","import { useParams } from \"react-router-dom\";\n\nimport { getMovieReview } from '../../components/Service/fetchData';\nimport { useEffect, useState } from \"react\";\n\nimport { ReviewsList } from \"components/ReviewsList/ReviewsList\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([])\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const data = await getMovieReview(id)\n                setReviews([...data])\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    \n        fetchReviews()\n    }, [id])\n\n    return (\n        <>\n            {reviews.length > 0 ? <ReviewsList reviews={reviews}/> : <div>There is no reviews.</div>}\n        </>\n    )\n}\n\nexport default Reviews;"],"names":["axios","api_key","getTrendingMovie","params","page","data","getMovieByQuery","query","results","getMovieById","id","getMovieCast","cast","getMovieReview","List","styled","Title","ReviewsList","reviews","map","author","content","useState","setReviews","useParams","useEffect","fetchReviews","console","log","length"],"sourceRoot":""}