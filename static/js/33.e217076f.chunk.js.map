{"version":3,"file":"static/js/33.e217076f.chunk.js","mappings":"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","sources":["components/Service/fetchData.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '158499514fbb39b03ca6770e80a554af',\n};\n\nexport const getTrendingMovie = async () => {\n  const { data } = await axios.get('/trending/all/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`)\n  return data;\n}\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`)\n  return data.cast;\n}\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`)\n  return data.results;\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const InfoMovieBlock = styled.div`\n    display: flex;\n    gap: 20px;\n    padding: 20px;;\n`\n\nexport const Poster = styled.img`\n    width: 200px;\n`\n\nexport const Wrapper = styled.div`\n    width: 500px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`\n\nexport const GoBackBtn = styled(Link)`\n    border: 1px solid rgb(27 180 139);\n    padding: 5px;\n    border-radius: 5px;\n\n    :hover,\n    :focus {\n        background: rgb(27 180 139);\n        color: white;\n    }\n`\n\nexport const Container = styled.div`\n    padding: 20px;\n\n`\n\nexport const DeatailedBtn = styled(Link)`\n    border: 1px solid rgb(27 180 139);\n    padding: 5px;\n    border-radius: 5px;\n    background: white;\n\n    :hover,\n    :focus {\n        background: rgb(27 180 139);\n        color: white;\n    }\n`\n\nexport const BtnWrapper = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    gap: 10px;\n    border: 1px solid rgb(27 180 139);\n    width: 100%;\n    padding: 20px;\n    margin: 0 auto;\n    background: rgb(27 180 139 / 15%);\n    box-shadow: 5px 3px 4px 1px rgba(10, 10, 4, 0.7);\n`\n\nexport const ErrorDiv = styled.div`\n    padding: 30px;\n    font-size: 30px;\n`","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from '../../components/Service/fetchData';\nimport { useEffect, useState } from 'react';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  Poster,\n  Wrapper,\n  InfoMovieBlock,\n  GoBackBtn,\n  Container,\n  DeatailedBtn,\n  BtnWrapper,\n  ErrorDiv\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState('');\n  const [loader, setLoader] = useState(false);\n  \n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setLoader(true)\n      try {\n        const { poster_path, name, title, overview, genres } =\n          await getMovieById(id);\n\n        setMovieDetails({\n          poster_path,\n          name: name || undefined,\n          title: title || undefined,\n          overview,\n          genresNames: genres.map(({ name }) => name + ' '),\n        });\n      } catch (error) {\n        setError('File not Found');\n      } finally {\n        setLoader(false)\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      {error !== '' ? (\n        <ErrorDiv>{error}</ErrorDiv>\n      ) : (\n        <Container>\n          <GoBackBtn to={backLinkHref}>Go back</GoBackBtn>\n          <InfoMovieBlock>\n            <Poster\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                  : 'https://via.placeholder.com/700?text=NoImageFound'\n              }\n              alt={movieDetails.name || movieDetails.title}\n            />\n            <Wrapper>\n              <h2>{movieDetails.name || movieDetails.title || 'No info'}</h2>\n              <p>Overview:</p>\n              <p>{movieDetails.overview || 'Not found'}</p>\n              <p>Genres:</p>\n              <p>{movieDetails.genresNames || 'Not found'}</p>\n            </Wrapper>\n          </InfoMovieBlock>\n          <BtnWrapper>\n            <DeatailedBtn to={`/movies/${id}/cast`} state={{ from: backLinkHref }}>Cast</DeatailedBtn>\n            <DeatailedBtn to={`/movies/${id}/reviews`} state={{ from: backLinkHref }}>Reviews</DeatailedBtn>\n          </BtnWrapper>\n          <Outlet />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrendingMovie","params","page","data","getMovieByQuery","query","results","getMovieById","id","getMovieCast","cast","getMovieReview","InfoMovieBlock","styled","Poster","Wrapper","GoBackBtn","Link","Container","DeatailedBtn","BtnWrapper","ErrorDiv","useState","movieDetails","setMovieDetails","error","setError","loader","setLoader","backLinkHref","useLocation","state","from","useParams","useEffect","fetchMovie","poster_path","name","title","overview","genres","undefined","genresNames","map","Loader","to","src","alt"],"sourceRoot":""}